AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Bucket:
    Description: The S3 Bucket which contains the code zipped. Example -> MyBucketName
    Type: String
    Default: MyBucketName
  FileKey:
    Description: Key path for your code zipped. Example -> /path/myfile.zip
    Type: String
    Default: "myfile.zip"

Resources:
  #LambdaRole
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: LogsPermission
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: 'arn:aws:logs:*:*:*'
              Effect: Allow
        - PolicyName: CreateAMIPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Action:
                - ec2:Describe*
                - ec2:CreateSnapshot
                - ec2:CreateImage
                - ec2:CreateVolume
                - ec2:RegisterImage
                - ec2:CreateTags
              Resource: "*"
              Effect: Allow

  #Lambda Function
  CreateAMIasBackup:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.lambda_handler
      Runtime: python2.7
      Role: !GetAtt LambdaRole.Arn
      Timeout: 300
      CodeUri:
        Bucket: !Ref Bucket
        Key: !Ref FileKey
      Events:
        Cron:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
